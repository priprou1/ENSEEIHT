// automatically generated by Xtext
grammar fr.n7.gls.miniprojet.txt.PDL with org.eclipse.xtext.common.Terminals

import "http://simplepdl" 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

Process returns Process:
	{Process}
	'process'
	name=EString
	'{'
		( processElements+=ProcessElement ( processElements+=ProcessElement)*  )?
	'}';

ProcessElement returns ProcessElement:
	WorkDefinition | WorkSequence | Guidance | Ressource;


EString returns ecore::EString:
	STRING | ID;

WorkDefinition returns WorkDefinition:
	{WorkDefinition} 'wd' name=EString
		('use' utilisations+=Utilisation ( "," utilisations+=Utilisation)* )?
;

WorkSequence returns WorkSequence:
	'ws' linkType=WorkSequenceType 'from' predecessor=[WorkDefinition|EString] 'to' successor=[WorkDefinition|EString]
;

Guidance returns Guidance:
	{Guidance}
	'note'
		text=EString
		('linked to' elements+=[ProcessElement|EString] ( "," elements+=[ProcessElement|EString])* )?
	;

Ressource returns Ressource:
	{Ressource}
	'ressource'
	name=EString
		(qMax=EInt 'maximum')?

	;

Utilisation returns Utilisation:
	nb=EInt
		ressource=[Ressource|EString]
;

EInt returns ecore::EInt:
	'-'? INT;

enum WorkSequenceType returns WorkSequenceType:
				startToStart = 's2s' | finishToStart = 'f2s' | startToFinish = 's2f' | finishToFinish = 'f2f';
