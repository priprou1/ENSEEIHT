
type token = 
  | UL_VIRG
  | UL_VARIABLE of (
# 18 "Parser.mly"
       (string)
# 8 "Parser__mock.ml.mock"
)
  | UL_SYMBOLE of (
# 17 "Parser.mly"
       (string)
# 13 "Parser__mock.ml.mock"
)
  | UL_PT
  | UL_PAROUV
  | UL_PARFER
  | UL_FIN
  | NEG
  | ECHEC
  | DEDUC
  | COUPURE

# 1 "Parser.mly"
  

(* Partie recopiee dans le fichier CaML genere. *)
(* Ouverture de modules exploites dans les actions *)
(* Declarations de types, de constantes, de fonctions, d'exceptions exploites dans les actions *)


# 32 "Parser__mock.ml.mock"

let menhir_begin_marker =
  0

and (xv_terme, xv_suite_terme, xv_suite_regle, xv_suite_predicat, xv_suite_expression, xv_regle, xv_programme, xv_predicat, xv_o, xv_expression) =
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) (
# 53 "Parser.mly"
                    _2
# 41 "Parser__mock.ml.mock"
   : 'tv_o) (_startpos__2_ : Lexing.position) (_endpos__2_ : Lexing.position) (_startofs__2_ : int) (_endofs__2_ : int) (_loc__2_ : Lexing.position * Lexing.position) (
# 53 "Parser.mly"
         _1
# 45 "Parser__mock.ml.mock"
   : (
# 17 "Parser.mly"
       (string)
# 49 "Parser__mock.ml.mock"
  )) (_startpos__1_ : Lexing.position) (_endpos__1_ : Lexing.position) (_startofs__1_ : int) (_endofs__1_ : int) (_loc__1_ : Lexing.position * Lexing.position) ->
    (
# 53 "Parser.mly"
                       ((print_endline ("terme : symbole o")) )
# 54 "Parser__mock.ml.mock"
     : 'tv_terme) in
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) (
# 52 "Parser.mly"
       _1
# 59 "Parser__mock.ml.mock"
   : (
# 18 "Parser.mly"
       (string)
# 63 "Parser__mock.ml.mock"
  )) (_startpos__1_ : Lexing.position) (_endpos__1_ : Lexing.position) (_startofs__1_ : int) (_endofs__1_ : int) (_loc__1_ : Lexing.position * Lexing.position) ->
    (
# 52 "Parser.mly"
                    ((print_endline ("terme : variable ")) )
# 68 "Parser__mock.ml.mock"
     : 'tv_terme) in
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) (
# 56 "Parser.mly"
                               _3
# 73 "Parser__mock.ml.mock"
   : 'tv_suite_terme) (_startpos__3_ : Lexing.position) (_endpos__3_ : Lexing.position) (_startofs__3_ : int) (_endofs__3_ : int) (_loc__3_ : Lexing.position * Lexing.position) (
# 56 "Parser.mly"
                         _2
# 77 "Parser__mock.ml.mock"
   : 'tv_terme) (_startpos__2_ : Lexing.position) (_endpos__2_ : Lexing.position) (_startofs__2_ : int) (_endofs__2_ : int) (_loc__2_ : Lexing.position * Lexing.position) (
# 56 "Parser.mly"
                 _1
# 81 "Parser__mock.ml.mock"
   : unit) (_startpos__1_ : Lexing.position) (_endpos__1_ : Lexing.position) (_startofs__1_ : int) (_endofs__1_ : int) (_loc__1_ : Lexing.position * Lexing.position) ->
    (
# 56 "Parser.mly"
                                            ((print_endline "suite_terme : , terme suite_terme") )
# 86 "Parser__mock.ml.mock"
     : 'tv_suite_terme) in
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) ->
    (
# 55 "Parser.mly"
                                  ((print_endline "suite_terme : /* lambda mot vide*/") )
# 92 "Parser__mock.ml.mock"
     : 'tv_suite_terme) in
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) ->
    (
# 37 "Parser.mly"
                                  ((print_endline "suite_regle : /* lambda mot vide*/") )
# 98 "Parser__mock.ml.mock"
     : 'tv_suite_regle) in
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) (
# 36 "Parser.mly"
                   _2
# 103 "Parser__mock.ml.mock"
   : 'tv_suite_regle) (_startpos__2_ : Lexing.position) (_endpos__2_ : Lexing.position) (_startofs__2_ : int) (_endofs__2_ : int) (_loc__2_ : Lexing.position * Lexing.position) (
# 36 "Parser.mly"
             _1
# 107 "Parser__mock.ml.mock"
   : 'tv_regle) (_startpos__1_ : Lexing.position) (_endpos__1_ : Lexing.position) (_startofs__1_ : int) (_endofs__1_ : int) (_loc__1_ : Lexing.position * Lexing.position) ->
    (
# 36 "Parser.mly"
                                ( (print_endline "suite_regle : regle suite_regle") )
# 112 "Parser__mock.ml.mock"
     : 'tv_suite_regle) in
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) ->
    (
# 42 "Parser.mly"
                                      ((print_endline "suite_predicat : /* lambda mot vide*/") )
# 118 "Parser__mock.ml.mock"
     : 'tv_suite_predicat) in
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) (
# 41 "Parser.mly"
                                 _3
# 123 "Parser__mock.ml.mock"
   : 'tv_suite_expression) (_startpos__3_ : Lexing.position) (_endpos__3_ : Lexing.position) (_startofs__3_ : int) (_endofs__3_ : int) (_loc__3_ : Lexing.position * Lexing.position) (
# 41 "Parser.mly"
                      _2
# 127 "Parser__mock.ml.mock"
   : 'tv_expression) (_startpos__2_ : Lexing.position) (_endpos__2_ : Lexing.position) (_startofs__2_ : int) (_endofs__2_ : int) (_loc__2_ : Lexing.position * Lexing.position) (
# 41 "Parser.mly"
                _1
# 131 "Parser__mock.ml.mock"
   : unit) (_startpos__1_ : Lexing.position) (_endpos__1_ : Lexing.position) (_startofs__1_ : int) (_endofs__1_ : int) (_loc__1_ : Lexing.position * Lexing.position) ->
    (
# 41 "Parser.mly"
                                                   ( (print_endline "suite_predicat : :- expression suite_expression") )
# 136 "Parser__mock.ml.mock"
     : 'tv_suite_predicat) in
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) (
# 50 "Parser.mly"
                                    _3
# 141 "Parser__mock.ml.mock"
   : 'tv_suite_expression) (_startpos__3_ : Lexing.position) (_endpos__3_ : Lexing.position) (_startofs__3_ : int) (_endofs__3_ : int) (_loc__3_ : Lexing.position * Lexing.position) (
# 50 "Parser.mly"
                         _2
# 145 "Parser__mock.ml.mock"
   : 'tv_expression) (_startpos__2_ : Lexing.position) (_endpos__2_ : Lexing.position) (_startofs__2_ : int) (_endofs__2_ : int) (_loc__2_ : Lexing.position * Lexing.position) (
# 50 "Parser.mly"
                 _1
# 149 "Parser__mock.ml.mock"
   : unit) (_startpos__1_ : Lexing.position) (_endpos__1_ : Lexing.position) (_startofs__1_ : int) (_endofs__1_ : int) (_loc__1_ : Lexing.position * Lexing.position) ->
    (
# 50 "Parser.mly"
                                                      ((print_endline "suite_expression : , expression suite_expression") )
# 154 "Parser__mock.ml.mock"
     : 'tv_suite_expression) in
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) ->
    (
# 49 "Parser.mly"
                                       ((print_endline "suite_expression : /* lambda mot vide*/") )
# 160 "Parser__mock.ml.mock"
     : 'tv_suite_expression) in
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) (
# 34 "Parser.mly"
                               _3
# 165 "Parser__mock.ml.mock"
   : unit) (_startpos__3_ : Lexing.position) (_endpos__3_ : Lexing.position) (_startofs__3_ : int) (_endofs__3_ : int) (_loc__3_ : Lexing.position * Lexing.position) (
# 34 "Parser.mly"
                _2
# 169 "Parser__mock.ml.mock"
   : 'tv_suite_predicat) (_startpos__2_ : Lexing.position) (_endpos__2_ : Lexing.position) (_startofs__2_ : int) (_endofs__2_ : int) (_loc__2_ : Lexing.position * Lexing.position) (
# 34 "Parser.mly"
       _1
# 173 "Parser__mock.ml.mock"
   : 'tv_predicat) (_startpos__1_ : Lexing.position) (_endpos__1_ : Lexing.position) (_startofs__1_ : int) (_endofs__1_ : int) (_loc__1_ : Lexing.position * Lexing.position) ->
    (
# 34 "Parser.mly"
                                      ( (print_endline "regle : predicat suite_predicat .") )
# 178 "Parser__mock.ml.mock"
     : 'tv_regle) in
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) (
# 32 "Parser.mly"
                             _3
# 183 "Parser__mock.ml.mock"
   : unit) (_startpos__3_ : Lexing.position) (_endpos__3_ : Lexing.position) (_startofs__3_ : int) (_endofs__3_ : int) (_loc__3_ : Lexing.position * Lexing.position) (
# 32 "Parser.mly"
                 _2
# 187 "Parser__mock.ml.mock"
   : 'tv_suite_regle) (_startpos__2_ : Lexing.position) (_endpos__2_ : Lexing.position) (_startofs__2_ : int) (_endofs__2_ : int) (_loc__2_ : Lexing.position * Lexing.position) (
# 32 "Parser.mly"
           _1
# 191 "Parser__mock.ml.mock"
   : 'tv_regle) (_startpos__1_ : Lexing.position) (_endpos__1_ : Lexing.position) (_startofs__1_ : int) (_endofs__1_ : int) (_loc__1_ : Lexing.position * Lexing.position) ->
    ((
# 32 "Parser.mly"
                                     ( (print_endline "programme : regle suite_regle FIN ") )
# 196 "Parser__mock.ml.mock"
     : 'tv_programme) : (
# 25 "Parser.mly"
      (unit)
# 200 "Parser__mock.ml.mock"
    )) in
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) (
# 39 "Parser.mly"
                                                 _5
# 205 "Parser__mock.ml.mock"
   : unit) (_startpos__5_ : Lexing.position) (_endpos__5_ : Lexing.position) (_startofs__5_ : int) (_endofs__5_ : int) (_loc__5_ : Lexing.position * Lexing.position) (
# 39 "Parser.mly"
                                     _4
# 209 "Parser__mock.ml.mock"
   : 'tv_suite_terme) (_startpos__4_ : Lexing.position) (_endpos__4_ : Lexing.position) (_startofs__4_ : int) (_endofs__4_ : int) (_loc__4_ : Lexing.position * Lexing.position) (
# 39 "Parser.mly"
                               _3
# 213 "Parser__mock.ml.mock"
   : 'tv_terme) (_startpos__3_ : Lexing.position) (_endpos__3_ : Lexing.position) (_startofs__3_ : int) (_endofs__3_ : int) (_loc__3_ : Lexing.position * Lexing.position) (
# 39 "Parser.mly"
                     _2
# 217 "Parser__mock.ml.mock"
   : unit) (_startpos__2_ : Lexing.position) (_endpos__2_ : Lexing.position) (_startofs__2_ : int) (_endofs__2_ : int) (_loc__2_ : Lexing.position * Lexing.position) (
# 39 "Parser.mly"
          _1
# 221 "Parser__mock.ml.mock"
   : (
# 17 "Parser.mly"
       (string)
# 225 "Parser__mock.ml.mock"
  )) (_startpos__1_ : Lexing.position) (_endpos__1_ : Lexing.position) (_startofs__1_ : int) (_endofs__1_ : int) (_loc__1_ : Lexing.position * Lexing.position) ->
    (
# 39 "Parser.mly"
                                                            (( print_endline ("predicat : symbole ( terme suite_terme)")) )
# 230 "Parser__mock.ml.mock"
     : 'tv_predicat) in
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) (
# 59 "Parser.mly"
                                             _4
# 235 "Parser__mock.ml.mock"
   : unit) (_startpos__4_ : Lexing.position) (_endpos__4_ : Lexing.position) (_startofs__4_ : int) (_endofs__4_ : int) (_loc__4_ : Lexing.position * Lexing.position) (
# 59 "Parser.mly"
                                 _3
# 239 "Parser__mock.ml.mock"
   : 'tv_suite_terme) (_startpos__3_ : Lexing.position) (_endpos__3_ : Lexing.position) (_startofs__3_ : int) (_endofs__3_ : int) (_loc__3_ : Lexing.position * Lexing.position) (
# 59 "Parser.mly"
                           _2
# 243 "Parser__mock.ml.mock"
   : 'tv_terme) (_startpos__2_ : Lexing.position) (_endpos__2_ : Lexing.position) (_startofs__2_ : int) (_endofs__2_ : int) (_loc__2_ : Lexing.position * Lexing.position) (
# 59 "Parser.mly"
                 _1
# 247 "Parser__mock.ml.mock"
   : unit) (_startpos__1_ : Lexing.position) (_endpos__1_ : Lexing.position) (_startofs__1_ : int) (_endofs__1_ : int) (_loc__1_ : Lexing.position * Lexing.position) ->
    (
# 59 "Parser.mly"
                                                        ((print_endline "o : (terme suite_terme)") )
# 252 "Parser__mock.ml.mock"
     : 'tv_o) in
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) ->
    (
# 58 "Parser.mly"
                        ((print_endline "o : /* lambda mot vide*/") )
# 258 "Parser__mock.ml.mock"
     : 'tv_o) in
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) (
# 47 "Parser.mly"
             _1
# 263 "Parser__mock.ml.mock"
   : 'tv_predicat) (_startpos__1_ : Lexing.position) (_endpos__1_ : Lexing.position) (_startofs__1_ : int) (_endofs__1_ : int) (_loc__1_ : Lexing.position * Lexing.position) ->
    (
# 47 "Parser.mly"
                       ((print_endline "expression : predicat") )
# 268 "Parser__mock.ml.mock"
     : 'tv_expression) in
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) (
# 46 "Parser.mly"
                 _2
# 273 "Parser__mock.ml.mock"
   : 'tv_predicat) (_startpos__2_ : Lexing.position) (_endpos__2_ : Lexing.position) (_startofs__2_ : int) (_endofs__2_ : int) (_loc__2_ : Lexing.position * Lexing.position) (
# 46 "Parser.mly"
             _1
# 277 "Parser__mock.ml.mock"
   : unit) (_startpos__1_ : Lexing.position) (_endpos__1_ : Lexing.position) (_startofs__1_ : int) (_endofs__1_ : int) (_loc__1_ : Lexing.position * Lexing.position) ->
    (
# 46 "Parser.mly"
                           ((print_endline "expression : - predicat") )
# 282 "Parser__mock.ml.mock"
     : 'tv_expression) in
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) (
# 45 "Parser.mly"
             _1
# 287 "Parser__mock.ml.mock"
   : unit) (_startpos__1_ : Lexing.position) (_endpos__1_ : Lexing.position) (_startofs__1_ : int) (_endofs__1_ : int) (_loc__1_ : Lexing.position * Lexing.position) ->
    (
# 45 "Parser.mly"
                      ((print_endline "expression : !") )
# 292 "Parser__mock.ml.mock"
     : 'tv_expression) in
  let _ = fun (_startpos : Lexing.position) (_endpos : Lexing.position) (_endpos__0_ : Lexing.position) (_symbolstartpos : Lexing.position) (_startofs : int) (_endofs : int) (_endofs__0_ : int) (_symbolstartofs : int) (_sloc : Lexing.position * Lexing.position) (_loc : Lexing.position * Lexing.position) (
# 44 "Parser.mly"
            _1
# 297 "Parser__mock.ml.mock"
   : unit) (_startpos__1_ : Lexing.position) (_endpos__1_ : Lexing.position) (_startofs__1_ : int) (_endofs__1_ : int) (_loc__1_ : Lexing.position * Lexing.position) ->
    (
# 44 "Parser.mly"
                   ((print_endline "expression : fail") )
# 302 "Parser__mock.ml.mock"
     : 'tv_expression) in
  ((let rec diverge() = diverge() in diverge()) : 'tv_terme * 'tv_suite_terme * 'tv_suite_regle * 'tv_suite_predicat * 'tv_suite_expression * 'tv_regle * 'tv_programme * 'tv_predicat * 'tv_o * 'tv_expression)

and menhir_end_marker =
  0

# 61 "Parser.mly"
  

# 312 "Parser__mock.ml.mock"
